{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tri Nguyen\\\\Desktop\\\\project\\\\fly-project\\\\pages\\\\index.tsx\";\nimport { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Home from \"../components/Home\";\nimport { DragControls } from \"../shared/Control/DragControls\";\n\nconst HomePage = () => {\n  let container;\n  let camera, scene, renderer;\n  let controls, group;\n  const objects = [];\n  const layoutRef = useRef(null);\n  useEffect(() => {\n    init();\n  }, []);\n\n  function init() {\n    document.body.appendChild(layoutRef.current);\n    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 5000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    scene.add(new THREE.AmbientLight(0x505050));\n    const light = new THREE.SpotLight(0xffffff, 1.5);\n    light.position.set(0, 500, 2000);\n    light.angle = Math.PI / 9;\n    light.castShadow = true;\n    light.shadow.camera.near = 1000;\n    light.shadow.camera.far = 4000;\n    light.shadow.mapSize.width = 1024;\n    light.shadow.mapSize.height = 1024;\n    scene.add(light);\n    group = new THREE.Group();\n    scene.add(group);\n    const geometry = new THREE.PlaneGeometry(120, 120);\n\n    for (let i = 0; i < 15; i++) {\n      const object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({\n        color: Math.random() * 0xffffff\n      }));\n      object.position.x = Math.random() * 1000 - 500;\n      object.position.y = Math.random() * 600 - 300;\n      scene.add(object);\n      objects.push(object);\n    }\n\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFShadowMap;\n    container.appendChild(renderer.domElement);\n    controls = new DragControls([...objects], camera, renderer.domElement);\n    controls.addEventListener(\"drag\", render);\n    render();\n  }\n\n  function render() {\n    renderer.render(scene, camera);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Home, {\n    layoutRef: layoutRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Tri Nguyen/Desktop/project/fly-project/pages/index.tsx"],"names":["useEffect","useRef","THREE","Home","DragControls","HomePage","container","camera","scene","renderer","controls","group","objects","layoutRef","init","document","body","appendChild","current","PerspectiveCamera","window","innerWidth","innerHeight","position","z","Scene","background","Color","add","AmbientLight","light","SpotLight","set","angle","Math","PI","castShadow","shadow","near","far","mapSize","width","height","Group","geometry","PlaneGeometry","i","object","Mesh","MeshLambertMaterial","color","random","x","y","push","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","type","PCFShadowMap","domElement","addEventListener","render"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Home from \"../components/Home\";\r\nimport { DragControls } from \"../shared/Control/DragControls\";\r\n\r\nconst HomePage = () => {\r\n  let container;\r\n  let camera, scene, renderer;\r\n  let controls, group;\r\n  const objects = [];\r\n\r\n  const layoutRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  function init() {\r\n    document.body.appendChild(layoutRef.current);\r\n\r\n    camera = new THREE.PerspectiveCamera(\r\n      50,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      5000\r\n    );\r\n    camera.position.z = 1000;\r\n\r\n    scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf0f0f0);\r\n\r\n    scene.add(new THREE.AmbientLight(0x505050));\r\n    const light = new THREE.SpotLight(0xffffff, 1.5);\r\n    light.position.set(0, 500, 2000);\r\n    light.angle = Math.PI / 9;\r\n\r\n    light.castShadow = true;\r\n    light.shadow.camera.near = 1000;\r\n    light.shadow.camera.far = 4000;\r\n    light.shadow.mapSize.width = 1024;\r\n    light.shadow.mapSize.height = 1024;\r\n\r\n    scene.add(light);\r\n\r\n    group = new THREE.Group();\r\n    scene.add(group);\r\n\r\n    const geometry = new THREE.PlaneGeometry(120, 120);\r\n\r\n    for (let i = 0; i < 15; i++) {\r\n      const object = new THREE.Mesh(\r\n        geometry,\r\n        new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff })\r\n      );\r\n\r\n      object.position.x = Math.random() * 1000 - 500;\r\n      object.position.y = Math.random() * 600 - 300;\r\n\r\n      scene.add(object);\r\n      objects.push(object);\r\n    }\r\n\r\n    renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFShadowMap;\r\n\r\n    container.appendChild(renderer.domElement);\r\n\r\n    controls = new DragControls([...objects], camera, renderer.domElement);\r\n    controls.addEventListener(\"drag\", render);\r\n    render();\r\n  }\r\n\r\n  function render() {\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  return <Home layoutRef={layoutRef} />;\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}