{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tri Nguyen\\\\Desktop\\\\project\\\\fly-project\\\\pages\\\\index.tsx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Home from \"../components/Home\";\nimport { LAYOUT_HEIGHT, LAYOUT_WIDTH, BACKGROUND_COLOR, EXPORT_DEFAULT_PIXEL_RATIO } from \"../constants/layout\";\nimport { DragControls } from \"../shared/Control/DragControls\";\n\nconst HomePage = () => {\n  const {\n    0: outOfBoxObjects,\n    1: setOutOfBoxObjects\n  } = useState([]);\n  const layoutRef = useRef(null);\n  let camera, scene, renderer;\n  let controls, group;\n  const objects = [];\n  useEffect(() => {\n    initializeLayout();\n  }, []);\n\n  function initializeCamera() {\n    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 5000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(BACKGROUND_COLOR);\n    scene.add(new THREE.AmbientLight(0x505050));\n    const light = new THREE.SpotLight(0xffffff, 1.5);\n    light.position.set(0, 500, 2000);\n    light.angle = Math.PI;\n    light.castShadow = true;\n    light.shadow.camera.near = 1000;\n    light.shadow.camera.far = 4000;\n    light.shadow.mapSize.width = LAYOUT_WIDTH;\n    light.shadow.mapSize.height = LAYOUT_HEIGHT;\n    scene.add(light);\n  }\n\n  function initializeLayoutObject() {\n    group = new THREE.Group();\n    scene.add(group);\n    const geometry = new THREE.PlaneGeometry(120, 120);\n\n    for (let i = 0; i < 1; i++) {\n      const object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({\n        color: 0x00695c\n      }));\n      object.position.x = 0; //Math.random() * 1000 - 500;\n\n      object.position.y = 0; //Math.random() * 600 - 300;\n\n      scene.add(object);\n      objects.push(object);\n    }\n  }\n\n  function initializeLayout() {\n    initializeCamera();\n    initializeLayoutObject();\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(EXPORT_DEFAULT_PIXEL_RATIO);\n    renderer.setSize(LAYOUT_WIDTH, LAYOUT_HEIGHT);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFShadowMap;\n    layoutRef.current.appendChild(renderer.domElement);\n    controls = new DragControls([...objects], camera, renderer.domElement);\n    controls.addEventListener(\"drag\", render);\n    render();\n  }\n\n  function handleOutOfBox() {\n    const objects = scene.children.filter(({\n      position\n    }) => {\n      console.log(position); //position.x > LAYOUT_WIDTH;\n      //position.x < 0 ||\n      //position.y > LAYOUT_HEIGHT ||\n      //position.y < 0\n    }); //console.log(objects.length);\n  }\n\n  function render() {\n    handleOutOfBox();\n    renderer.render(scene, camera);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Home, {\n      layoutRef: layoutRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hello\", JSON.stringify(outOfBoxObjects)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Tri Nguyen/Desktop/project/fly-project/pages/index.tsx"],"names":["useState","useEffect","useRef","THREE","Home","LAYOUT_HEIGHT","LAYOUT_WIDTH","BACKGROUND_COLOR","EXPORT_DEFAULT_PIXEL_RATIO","DragControls","HomePage","outOfBoxObjects","setOutOfBoxObjects","layoutRef","camera","scene","renderer","controls","group","objects","initializeLayout","initializeCamera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","Scene","background","Color","add","AmbientLight","light","SpotLight","set","angle","Math","PI","castShadow","shadow","near","far","mapSize","width","height","initializeLayoutObject","Group","geometry","PlaneGeometry","i","object","Mesh","MeshLambertMaterial","color","x","y","push","WebGLRenderer","antialias","setPixelRatio","setSize","shadowMap","enabled","type","PCFShadowMap","current","appendChild","domElement","addEventListener","render","handleOutOfBox","children","filter","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Home from \"../components/Home\";\r\nimport {\r\n  LAYOUT_HEIGHT,\r\n  LAYOUT_WIDTH,\r\n  BACKGROUND_COLOR,\r\n  EXPORT_DEFAULT_PIXEL_RATIO,\r\n} from \"../constants/layout\";\r\nimport { DragControls } from \"../shared/Control/DragControls\";\r\n\r\nconst HomePage = () => {\r\n  const [outOfBoxObjects, setOutOfBoxObjects] = useState([]);\r\n  const layoutRef = useRef(null);\r\n  let camera, scene, renderer;\r\n  let controls, group;\r\n  const objects = [];\r\n\r\n  useEffect(() => {\r\n    initializeLayout();\r\n  }, []);\r\n\r\n  function initializeCamera() {\r\n    camera = new THREE.PerspectiveCamera(\r\n      50,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      5000\r\n    );\r\n    camera.position.z = 1000;\r\n\r\n    scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(BACKGROUND_COLOR);\r\n\r\n    scene.add(new THREE.AmbientLight(0x505050));\r\n    const light = new THREE.SpotLight(0xffffff, 1.5);\r\n    light.position.set(0, 500, 2000);\r\n    light.angle = Math.PI;\r\n\r\n    light.castShadow = true;\r\n    light.shadow.camera.near = 1000;\r\n    light.shadow.camera.far = 4000;\r\n    light.shadow.mapSize.width = LAYOUT_WIDTH;\r\n    light.shadow.mapSize.height = LAYOUT_HEIGHT;\r\n\r\n    scene.add(light);\r\n  }\r\n\r\n  function initializeLayoutObject() {\r\n    group = new THREE.Group();\r\n    scene.add(group);\r\n\r\n    const geometry = new THREE.PlaneGeometry(120, 120);\r\n\r\n    for (let i = 0; i < 1; i++) {\r\n      const object = new THREE.Mesh(\r\n        geometry,\r\n        new THREE.MeshLambertMaterial({ color: 0x00695c })\r\n      );\r\n\r\n      object.position.x = 0; //Math.random() * 1000 - 500;\r\n      object.position.y = 0; //Math.random() * 600 - 300;\r\n\r\n      scene.add(object);\r\n      objects.push(object);\r\n    }\r\n  }\r\n\r\n  function initializeLayout() {\r\n    initializeCamera();\r\n    initializeLayoutObject();\r\n\r\n    renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setPixelRatio(EXPORT_DEFAULT_PIXEL_RATIO);\r\n    renderer.setSize(LAYOUT_WIDTH, LAYOUT_HEIGHT);\r\n\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFShadowMap;\r\n\r\n    layoutRef.current.appendChild(renderer.domElement);\r\n\r\n    controls = new DragControls([...objects], camera, renderer.domElement);\r\n    controls.addEventListener(\"drag\", render);\r\n    render();\r\n  }\r\n\r\n  function handleOutOfBox() {\r\n    const objects = scene.children.filter(({ position }) => {\r\n      console.log(position);\r\n      //position.x > LAYOUT_WIDTH;\r\n      //position.x < 0 ||\r\n      //position.y > LAYOUT_HEIGHT ||\r\n      //position.y < 0\r\n    });\r\n    //console.log(objects.length);\r\n  }\r\n\r\n  function render() {\r\n    handleOutOfBox();\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Home layoutRef={layoutRef} />\r\n      <div>Hello{JSON.stringify(outOfBoxObjects)}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}