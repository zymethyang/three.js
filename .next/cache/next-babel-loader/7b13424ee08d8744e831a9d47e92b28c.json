{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Tri Nguyen\\\\Desktop\\\\project\\\\fly-project\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Home from \"../components/Home\";\nimport { LAYOUT_HEIGHT, LAYOUT_WIDTH, BACKGROUND_COLOR } from \"../constants/layout\";\nimport { DragControls } from \"../shared/Control/DragControls\";\n\nvar HomePage = function HomePage() {\n  _s();\n\n  var layoutRef = useRef(null);\n  var camera, scene, renderer;\n  var controls, group;\n  var objects = [];\n  useEffect(function () {\n    initializeLayout();\n  }, []);\n\n  function initializeLayout() {\n    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 5000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(BACKGROUND_COLOR);\n    scene.add(new THREE.AmbientLight(0x505050));\n    var light = new THREE.SpotLight(0xffffff, 1.5);\n    light.position.set(0, 500, 2000);\n    light.angle = Math.PI / 9;\n    light.castShadow = true;\n    light.shadow.camera.near = 1000;\n    light.shadow.camera.far = 4000;\n    light.shadow.mapSize.width = 1024;\n    light.shadow.mapSize.height = 1024;\n    scene.add(light);\n    group = new THREE.Group();\n    scene.add(group);\n    var geometry = new THREE.PlaneGeometry(120, 120);\n\n    for (var i = 0; i < 15; i++) {\n      var object = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({\n        color: Math.random() * 0xffffff\n      }));\n      object.position.x = Math.random() * 1000 - 500;\n      object.position.y = Math.random() * 600 - 300;\n      scene.add(object);\n      objects.push(object);\n    }\n\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(LAYOUT_WIDTH, LAYOUT_HEIGHT);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFShadowMap;\n    layoutRef.current.appendChild(renderer.domElement);\n    controls = new DragControls([].concat(objects), camera, renderer.domElement);\n    controls.addEventListener(\"drag\", render);\n    render();\n  }\n\n  function render() {\n    console.log(controls.getObjects());\n    renderer.render(scene, camera);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Home, {\n    layoutRef: layoutRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(HomePage, \"UdUlD6HaKxJDKe5M0nIy/qKy3gs=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Tri Nguyen/Desktop/project/fly-project/pages/index.tsx"],"names":["useEffect","useRef","THREE","Home","LAYOUT_HEIGHT","LAYOUT_WIDTH","BACKGROUND_COLOR","DragControls","HomePage","layoutRef","camera","scene","renderer","controls","group","objects","initializeLayout","PerspectiveCamera","window","innerWidth","innerHeight","position","z","Scene","background","Color","add","AmbientLight","light","SpotLight","set","angle","Math","PI","castShadow","shadow","near","far","mapSize","width","height","Group","geometry","PlaneGeometry","i","object","Mesh","MeshLambertMaterial","color","random","x","y","push","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","type","PCFShadowMap","current","appendChild","domElement","addEventListener","render","console","log","getObjects"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Home from \"../components/Home\";\r\nimport {\r\n  LAYOUT_HEIGHT,\r\n  LAYOUT_WIDTH,\r\n  BACKGROUND_COLOR,\r\n} from \"../constants/layout\";\r\nimport { DragControls } from \"../shared/Control/DragControls\";\r\n\r\nconst HomePage = () => {\r\n  const layoutRef = useRef(null);\r\n  let camera, scene, renderer;\r\n  let controls, group;\r\n  const objects = [];\r\n\r\n  useEffect(() => {\r\n    initializeLayout();\r\n  }, []);\r\n\r\n  function initializeLayout() {\r\n    camera = new THREE.PerspectiveCamera(\r\n      50,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      5000\r\n    );\r\n    camera.position.z = 1000;\r\n\r\n    scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(BACKGROUND_COLOR);\r\n\r\n    scene.add(new THREE.AmbientLight(0x505050));\r\n    const light = new THREE.SpotLight(0xffffff, 1.5);\r\n    light.position.set(0, 500, 2000);\r\n    light.angle = Math.PI / 9;\r\n\r\n    light.castShadow = true;\r\n    light.shadow.camera.near = 1000;\r\n    light.shadow.camera.far = 4000;\r\n    light.shadow.mapSize.width = 1024;\r\n    light.shadow.mapSize.height = 1024;\r\n\r\n    scene.add(light);\r\n\r\n    group = new THREE.Group();\r\n    scene.add(group);\r\n\r\n    const geometry = new THREE.PlaneGeometry(120, 120);\r\n\r\n    for (let i = 0; i < 15; i++) {\r\n      const object = new THREE.Mesh(\r\n        geometry,\r\n        new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff })\r\n      );\r\n\r\n      object.position.x = Math.random() * 1000 - 500;\r\n      object.position.y = Math.random() * 600 - 300;\r\n\r\n      scene.add(object);\r\n      objects.push(object);\r\n    }\r\n\r\n    renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(LAYOUT_WIDTH, LAYOUT_HEIGHT);\r\n\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFShadowMap;\r\n\r\n    layoutRef.current.appendChild(renderer.domElement);\r\n\r\n    controls = new DragControls([...objects], camera, renderer.domElement);\r\n    controls.addEventListener(\"drag\", render);\r\n    render();\r\n  }\r\n\r\n  function render() {\r\n    console.log(controls.getObjects())\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  return <Home layoutRef={layoutRef} />;\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}